@model Webthanhtamstore.Models.MENU

@{
    ViewBag.Title = "ThemMoi";
    Layout = "~/Views/Layout/AdminLayout.cshtml";
}

<h2>ThemMoi</h2>

@*Thêm thuộc tính cho form để upload ảnh*@

@using (Html.BeginForm("ThemMoi", "QuanLySanPham", FormMethod.Post, new { @enctype = "multipart/form-data" })) //Thuộc tính new này để upload dc file
{
                @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>MENU</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  
    <div class="form-group">
        @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gia, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Anh, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @*  @Html.EditorFor(model => model.Anh, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Anh, "", new { @class = "text-danger" })*@
            <input type="file" name="fileUpload" />@*Name của thẻ input file phải trùng tên với tên thêm số bên cotroller*@
            @*Thông báo trùng ảnh*@
            @ViewBag.ThongBao
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MaChuDe, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.MaChuDe, new { htmlAttributes = new { @class = "form-control" } })*@
            @*Trên nó đang hiển thị với EditorFor, mình muốn hiển thị kiểu dopdownlist thì mình xóa nó đi*@
            @Html.DropDownList("MaChuDe")@*Đặt tên giống bên ViewBag luôn*@
            @Html.ValidationMessageFor(model => model.MaChuDe, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @* @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })*@
            @*Đặt tên là MoTa, phai giống như bên Menu.Metadata.cs*@
            <textarea name="MoTa">Next, use our Get Started docs to setup Tiny!</textarea>

        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>


</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
